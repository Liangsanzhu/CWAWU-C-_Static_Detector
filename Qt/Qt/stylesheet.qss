/* === Shared === */
QStackedWidget, QLabel, QPushButton, QRadioButton, QCheckBox,
QGroupBox, QStatusBar, QToolButton, QComboBox, QDialog, QTabBar {
font-family: “Segoe UI”;
background-color: #888;
color: #000;
}
.QWidget {
background-color: #C8C8C8 ;
}

QToolBar {
background-color: #C8C8C8 ;
}

QDialog, QFileDialog {
background-color: #C8C8C8 ;
}

QTabWidget::pane { /* The tab widget frame */
border-top: 2px solid #C2C7CB;
}

/* === QTabBar === */
QTabBar::tab {
border-bottom: none;
color: #000;
padding: 4px;
background-color: #888;
border: 1px solid #B0B0B0;
}

QTabBar::tab:hover {
background-color: #AAA;
}

QTabBar::tab:selected {
background-color: #000;
color: white;
}

/* === QTabWidget === */
QTabWidget::pane {
background: #888;
border: 1px solid #B0B0B0;
}

/* === QToolBar === */
QToolBar {
background: #949494;
border: none;
padding-left: 0px;
padding-right: 0px;
margin: 2px;
}

QToolBar::separator {
width: 1px;
margin-left: 3px;
margin-right: 3px;
background-color: #B0B0B0;
}

/* Nice Windows-XP-style password character. */
QLineEdit[echoMode=”2”] {
lineedit-password-character: 9679;
}

QHeaderView::section {
background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1,
stop:0 #616161, stop: 0.5 #505050,
stop: 0.6 #434343, stop:1 #656565);
color: white;
padding-left: 4px;
border: 1px solid #6c6c6c;
}

QHeaderView::section:checked
{
background-color: red;
}

/* We provide a min-width and min-height for push buttons
so that they look elegant regardless of the width of the text. */
QPushButton {
background-color:#888888;
border-width: 2px;
border-color: #000033;
border-style: solid;
border-radius: 5;
padding: 3px;
min-width: 9ex;
min-height: 2.5ex;
}

QPushButton:hover {
background-color:#999;
}

/* Increase the padding, so the text is shifted when the button is
pressed. */
QPushButton:pressed {
padding-left: 5px;
padding-top: 5px;
background-color: #333;
border-color: #B0B0B0;
color: #AAA;
}

QLabel, QAbstractButton {
font: bold;
}

/* Mark mandatory fields with a brownish color. */
.mandatory {
color: brown;
}

/* Bold text on status bar looks awful. */
QStatusBar QLabel {
font: normal;
}

QStatusBar::item {
border-width: 1;
border-color: #000033;
border-style: solid;
border-radius: 2;
}

QStackedWidget, QLabel, QPushButton, QRadioButton, QCheckBox,
QGroupBox, QStatusBar, QToolButton, QComboBox, QDialog, QTabBar {
font-family: “Segoe UI”;
background-color: #888;
color: #000;
}

QListView {
show-decoration-selected: 1;
}

QListView::item:hover {
background-color: wheat;
}

/* We reserve 1 pixel space in padding. When we get the focus,
we kill the padding and enlarge the border. This makes the items
glow. */
QLineEdit, QFrame {
border-width: 1px;
padding: 1px;
border-style: solid;
border-color: #000033;
border-radius: 5px;
}

/* As mentioned above, eliminate the padding and increase the border. */
QLineEdit:focus, QFrame:focus {
border-width: 3px;
padding: 0px;
}

/* A QLabel is a QFrame */
QLabel {
border: none;
padding: 0;
background: none;
}

/* A QToolTip is a QLabel */
QToolTip {
border: 2px solid #000033;
padding: 5px;
border-radius: 3px;

}

/* Nice to have the background color change when hovered. */
QRadioButton:hover, QCheckBox:hover {
background-color: wheat;
}

/* Force the dialog’s buttons to follow the Windows guidelines. */
QDialogButtonBox {
button-layout: 0;
}
/* === QMenu === */
QMenu {
background-color: black;
border: 1px solid gray;
color: white;
padding: 1px;
}

QMenu::item {
padding: 2px 25px 2px 20px;
border: 1px solid transparent;
}

QMenu::item:disabled {
color: #666666;
}

QMenu::item:selected {
border-color: gray;
background: #222222;
}

QMenu::icon:checked {

}

QMenu::separator {
height: 1px;
background: #222222;
margin-left: 10px;
margin-right: 10px;
margin-top: 1px;
margin-bottom: 1px;
}

QMenu::indicator {
width: 13px;
height: 13px;
}

/* === QMenuBar === */
QMenuBar {
background-color: black;
color: white;
}

QMenuBar::item {
background: transparent;
}

QMenuBar::item:disabled {
color: gray;
}

QMenuBar::item:selected {
background: #222222;
}

QMenuBar::item:pressed {
background: #444444;
}

/* =================== */
QLineEdit, QListView, QTreeView, QTableView, QAbstractSpinBox {
background-color: #AAA;
color: #000;
border: 1px solid #B0B0B0;
}

QAbstractScrollArea, QLineEdit, QTextEdit, QAbstractSpinBox, QComboBox {
border: 1px solid #B0B0B0;
}

/* === QHeaderView === */
QHeaderView::section {
height: 20px;
}

QHeaderView::section {
background: #666;
border: 0;
color: #000;
padding-left: 4px;
}

/* === QListView === */
QListView::item:hover {
background: #AAA;
}

QListView::item:selected {
background: #333;
color: #AAA;
}

/* === QTableView === */
QTableView::item:hover {
background: #333333;
}

QTableView::item:hover {
background: #111111;
color: yellow;
}

/* === QTreeView === */
QTreeView::item {
background: #AAA;
}

QTreeView::item:hover {
background: #CCC;
}

QTreeView::item:selected {
background: #333;
color: #AAA;
}

QTreeView::branch {

}

QTreeView::branch:has-siblings:adjoins-item {

}

QTreeView::branch:has-siblings:!adjoins-item {

}

QTreeView::branch:closed:has-children:has-siblings {

}

QTreeView::branch:has-children:!has-siblings:closed {

}

QTreeView::branch:!has-children:!has-siblings:adjoins-item {

}

QTreeView::branch:open:has-children:has-siblings {

}

QTreeView::branch:open:has-children:!has-siblings {

}
/* === QWidget === */
QWidget:window {
font-family: ‘Segoe UI’;
background-color: #E8E8E8;
}
